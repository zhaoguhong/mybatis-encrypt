package com.zhaoguhong.mybatis.encrypt.test.dao;

import com.zhaoguhong.mybatis.encrypt.handler.CryptTypeHandler;
import com.zhaoguhong.mybatis.encrypt.test.entity.User;
import java.util.Map;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Options;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

@Mapper
public interface UserMapper {
  /**
   * This method was generated by MyBatis Generator.
   * This method corresponds to the database table user
   *
   * @mbg.generated Sat Jun 12 15:27:08 CST 2021
   */
  @Delete({
      "delete from user",
      "where `id` = #{id,jdbcType=BIGINT}"
  })
  int deleteByPrimaryKey(Long id);

  /**
   * This method was generated by MyBatis Generator.
   * This method corresponds to the database table user
   *
   * @mbg.generated Sat Jun 12 15:27:08 CST 2021
   */
  @Insert({
      "insert into user (`id`, `password`, ",
      "`user_name`, `age`)",
      "values (#{id,jdbcType=BIGINT}, #{password,jdbcType=VARCHAR}, ",
      "#{userName,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER})"
  })
  @Options(useGeneratedKeys = true)
  int insert(User record);


  /**
   * This method was generated by MyBatis Generator.
   * This method corresponds to the database table user
   *
   * @mbg.generated Sat Jun 12 15:27:08 CST 2021
   */
  @Insert({
      "insert into user (`id`, `password`, ",
      "`user_name`, `age`)",
      "values (#{id,jdbcType=BIGINT}, #{password,jdbcType=VARCHAR}, ",
       // 对 userName 指定 typeHandler
      "#{userName,jdbcType=VARCHAR,typeHandler=cryptTypeHandler}, #{age,jdbcType=INTEGER})"
  })
  @Options(useGeneratedKeys = true)
  int insertWithMap(Map<String,Object> record);

  /**
   * This method was generated by MyBatis Generator.
   * This method corresponds to the database table user
   *
   * @mbg.generated Sat Jun 12 15:27:08 CST 2021
   */
  @InsertProvider(type=UserSqlProvider.class, method="insertSelective")
  int insertSelective(User record);

  /**
   * This method was generated by MyBatis Generator.
   * This method corresponds to the database table user
   *
   * @mbg.generated Sat Jun 12 15:27:08 CST 2021
   */
  @Select({
      "select",
      "`id`, `password`, `user_name`, `age`",
      "from user",
      "where `id` = #{id,jdbcType=BIGINT}"
  })
  @Results({
      @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
      @Result(column="password", property="password", jdbcType=JdbcType.VARCHAR),
      @Result(column="user_name", property="userName", jdbcType=JdbcType.VARCHAR),
      @Result(column="age", property="age", jdbcType=JdbcType.INTEGER)
  })
  User selectByPrimaryKey(Long id);

  /**
   * This method was generated by MyBatis Generator.
   * This method corresponds to the database table user
   *
   * @mbg.generated Sat Jun 12 15:27:08 CST 2021
   */
  @Select({
      "select",
      "`id`, `password`, `user_name`, `age`",
      "from user",
      "where `id` = #{id,jdbcType=BIGINT}"
  })
  @Results({
      @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
      @Result(column="password", property="password", jdbcType=JdbcType.VARCHAR),
      // 对 userName 指定 typeHandler
      @Result(column = "user_name", property = "userName", jdbcType = JdbcType.VARCHAR, typeHandler = CryptTypeHandler.class),
      @Result(column="age", property="age", jdbcType=JdbcType.INTEGER)
  })
  Map<String, Object> selectByPrimaryKeyWithReturnMap(Long id);

  /**
   * This method was generated by MyBatis Generator.
   * This method corresponds to the database table user
   *
   * @mbg.generated Sat Jun 12 15:27:08 CST 2021
   */
  @UpdateProvider(type=UserSqlProvider.class, method="updateByPrimaryKeySelective")
  int updateByPrimaryKeySelective(User record);

  /**
   * This method was generated by MyBatis Generator.
   * This method corresponds to the database table user
   *
   * @mbg.generated Sat Jun 12 15:27:08 CST 2021
   */
  @Update({
      "update user",
      "set `password` = #{password,jdbcType=VARCHAR},",
      "`user_name` = #{userName,jdbcType=VARCHAR},",
      "`age` = #{age,jdbcType=INTEGER}",
      "where `id` = #{id,jdbcType=BIGINT}"
  })
  int updateByPrimaryKey(User record);
}
